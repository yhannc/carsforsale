<!DOCTYPE HTML>
<html>
	<head>
		<title>Cars for Sale: Makes</title>
		<link rel="stylesheet" type="text/css" href="/style.css">
		<link rel="stylesheet" type="text/css" href="/smoothness/jquery-ui-1.8.20.custom.css">	
		<script type="text/javascript" src="/js/jquery-1.4.4.min.js"></script>
		<script type="text/javascript" src="/js/jquery-ui-1.8.20.custom.min.js"></script>
	</head>
	<body>
		<a href="/"><h1>Cars for Sale</h1></a>
		<% if (makes.length > 0) { %>
		<ul>
			<% makes.forEach(function(make) { %>
			<li><a href="/makes/<%=make._id%>"><%=make.name%></a></li>
			<% }); %>
		</ul>
		<% } else { %>
		<div>No makes have been added.</div>
		<% } %>
		<div class="control">
			<h2>Add or update a new make</h2>
			<script>
				function onFormSubmit(form) {
				form.action = form.action + form.elements['item[id]'].value;
				console.log(form.action);
				return true;
				} 
			</script>
			<form id="create-make" method="post" action="/makes/" 
				onsubmit="return onFormSubmit(this);">
				<!-- The line above dynamically sets the PUT destination when the -->
				<!-- form is submitted. -------------------------------------------->
				<input type="hidden" name="_method" value="put">
				<!-- The line above tells the server to treat this as a PUT request. -->
				
				<style>
				.ui-combobox {
					position: relative;
					display: inline-block;
				}
				.ui-button {
					position: absolute;
					top: 0;
					bottom: 0;
					margin-left: -1px;
					padding: 0;
					/* adjust styles for IE 6/7 */
					*height: 1.7em;
					*top: 0.1em;
				}
				.ui-autocomplete-input {
					margin: 0;
					padding: 0.3em;
				}
				</style>
				<script>
				(function( $ ) {
					$.widget( "ui.combobox", {
						_create: function() {
							var input,
								self = this,
								select = this.element.hide(),
								selected = select.children( ":selected" ),
								value = selected.val() ? selected.text() : "",
								wrapper = $( "<span>" )
									.addClass( "ui-combobox" )
									.insertAfter( select );
			
							input = $( "<input>" )
								.appendTo( wrapper )
								.val( value )
								.addClass( "ui-state-default" )
								.autocomplete({
									delay: 0,
									minLength: 0,
									source: function( request, response ) {
										var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
										response( select.children( "option" ).map(function() {
											var text = $( this ).text();
											if ( this.value && ( !request.term || matcher.test(text) ) )
												return {
													label: text.replace(
														new RegExp(
															"(?![^&;]+;)(?!<[^<>]*)(" +
															$.ui.autocomplete.escapeRegex(request.term) +
															")(?![^<>]*>)(?![^&;]+;)", "gi"
														), "<strong>$1</strong>" ),
													value: text,
													option: this
												};
										}) );
									},
									select: function( event, ui ) {
										ui.item.option.selected = true;
										self._trigger( "selected", event, {
											item: ui.item.option
										});
									},
									change: function( event, ui ) {
										if ( !ui.item ) {
											var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( $(this).val() ) + "$", "i" ),
												valid = false;
											select.children( "option" ).each(function() {
												if ( $( this ).text().match( matcher ) ) {
													this.selected = valid = true;
													return false;
												}
											});
											if ( !valid ) {
												// remove invalid value, as it didn't match anything
												$( this ).val( "" );
												select.val( "" );
												input.data( "autocomplete" ).term = "";
												return false;
											}
										}
									}
								})
								.addClass( "ui-widget ui-widget-content ui-corner-left" );
			
							input.data( "autocomplete" )._renderItem = function( ul, item ) {
								return $( "<li></li>" )
									.data( "item.autocomplete", item )
									.append( "<a>" + item.label + "</a>" )
									.appendTo( ul );
							};
			
							$( "<a>" )
								.attr( "tabIndex", -1 )
								.attr( "title", "Show All Items" )
								.appendTo( wrapper )
								.button({
									icons: {
										primary: "ui-icon-triangle-1-s"
									},
									text: false
								})
								.removeClass( "ui-corner-all" )
								.addClass( "ui-corner-right ui-button-icon" )
								.click(function() {
									// close if already visible
									if ( input.autocomplete( "widget" ).is( ":visible" ) ) {
										input.autocomplete( "close" );
										return;
									}
			
									// work around a bug (likely same cause as #5265)
									$( this ).blur();
			
									// pass empty string as value to search for, displaying all results
									input.autocomplete( "search", "" );
									input.focus();
								});
						},
			
						destroy: function() {
							this.wrapper.remove();
							this.element.show();
							$.Widget.prototype.destroy.call( this );
						}
					});
				})( jQuery );
			
				$(function() {
					$( "#combobox" ).combobox();
					$( "#toggle" ).click(function() {
						$( "#combobox" ).toggle();
					});
				});
				</script>

				<label>Make ID:<br>(lowercase letters only, no spaces):<br>
					<select id="combobox">
						<%  makes.forEach(function(make) { %>
						<option value="<%=make._id%>">
						<%=make.id%>
						</option>
						<% }); %>
					</select>
				</label>
				<label>Make name:<br> 
					<input id="inputmake" name="item[name]" type="text" required
						placeholder="Ford">
					<select id="selectmake">
						<%  makes.forEach(function(make) { %>
						<option value="<%=make._id%>">
						<%=make.name%>
						</option>
						<% }); %>
					</select>
				</label>
				<label>Make description:
					<textarea name="item[description]" cols="20" rows="10" 
						placeholder="description of the item">
					</textarea>
				</label>
				<button>Add or update</button>
			</form>
		</div>
	</body>	
</html>